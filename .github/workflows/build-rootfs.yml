name: Build stal/IX rootfs tarball

on: workflow_dispatch

jobs:
  stage1:
    runs-on: ubuntu-24.04
    outputs:
      cdate: ${{ steps.set_date.outputs.cdate }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: stalix-repo

      - name: Install build dependencies
        run: |
          sudo apt update
          sudo apt install -y clang git lld llvm passwd python3-minimal tar util-linux xz-utils
          sudo update-alternatives --install /usr/bin/clang-cpp clang-cpp /usr/bin/clang-cpp-18 100
          
      - name: Build stage 1 rootfs tarball
        run: |
          sudo bash -c '
          while true; do
            if [[ -d "stalix/ix/trash" ]] && [[ "$(du -s "stalix/ix/trash" | cut -f1)" -gt 1000 ]]; then
              echo -e "\n[BG] Purging '\''stalix/ix/trash'\''"
              du -sh "stalix/ix/trash" 2>/dev/null ; echo -e "\n"
              find "stalix/ix/trash" -mindepth 1 -delete &>/dev/null
            fi
            sleep 120
          done
          ' &
          sudo stalix-repo/build-rootfs-gha-stage1.sh

      - name: Set cache date
        id: set_date
        run: |
          echo "CDATE=$(echo stalix-*-*-stage1.tar.xz | cut -d . -f 1 | cut -d - -f 3)" >> $GITHUB_ENV
          echo "cdate=$(echo stalix-*-*-stage1.tar.xz | cut -d . -f 1 | cut -d - -f 3)" >> $GITHUB_OUTPUT

      - name: Save stage 1 rootfs tarball to cache
        uses: actions/cache/save@v4
        with:
          path: stalix-*-*-stage1.tar.xz
          key: stage1-${{ env.CDATE }}

  stage2:
    needs: stage1
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: stalix-repo

      - name: Install build dependencies
        run: |
          sudo apt update
          sudo apt install -y bubblewrap tar xz-utils
      
      - name: Restore stage 1 rootfs tarball from cache
        uses: actions/cache/restore@v4
        with:
          path: stalix-*-*-stage1.tar.xz
          key: stage1-${{ needs.stage1.outputs.cdate }}
          
      - name: Build rootfs tarball
        run: |
          sudo bash -c '
          while true; do
            if [[ -d "stalix/ix/trash" ]] && [[ "$(du -s "stalix/ix/trash" | cut -f1)" -gt 1000 ]]; then
              echo -e "\n[BG] Purging '\''stalix/ix/trash'\''"
              du -sh "stalix/ix/trash" 2>/dev/null ; echo -e "\n"
              find "stalix/ix/trash" -mindepth 1 -delete &>/dev/null
            fi
            sleep 120
          done
          ' &
          sudo stalix-repo/build-rootfs-gha-stage2.sh stalix-*-*-stage1.tar.xz
          
      - name: Remove stage 1 rootfs tarball
        run: sudo rm -f stalix-*-*-stage1.tar.xz

      - name: Set release tag
        id: set_tag
        run: echo "RDATE=$(echo stalix-*-*.tar.xz | cut -d . -f 1 | cut -d - -f 3)" >> $GITHUB_ENV

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          name: "${{ env.RDATE }}"
          tag_name: "${{ env.RDATE }}"
          prerelease: false
          draft: false
          generate_release_notes: false
          make_latest: true
          files: |
            stalix-*-*.tar.xz
